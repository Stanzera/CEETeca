package models;
// Generated 27/11/2018 14:35:48 by Hibernate Tools 4.3.1


import DAO.NewHibernateUtil;
import java.sql.ResultSet;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.Vector;
import javax.persistence.Query;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;

/**
 * Professor generated by hbm2java
 */
public class Professor  implements java.io.Serializable {


     private int idProfessor;
     private Pessoa pessoa;
     private Set professorHasCursos = new HashSet(0);

    public Professor() {
    }
    
    public DefaultTableModel pesquisar(String pesq) throws Exception{
    
        Session sessao = NewHibernateUtil.getSessionFactory().openSession();
        sessao.beginTransaction();
        
        Query q = sessao.createSQLQuery("SELECT DISTINCT pe.idProfessor, p.nomePessoa as Nome , p.cpfPessoa as CPF, c.emailContato as E_mail, c.telefoneContato as Telefone, c.CelularContato as Celular\n"
                + "\n"
                + "FROM pessoa p, professor pe, contato c\n"
                + "\n"
                + "WHERE p.nomePessoa like '"+pesq+"%'\n"
                + "order by p.nomePessoa;").addEntity(viewmodel.viewGerProfessor.class);
        
        //pega o resultado da query e retorna uma lista
        List<viewmodel.viewGerProfessor> registrosTelaPrincipal = q.getResultList();
        sessao.getTransaction().commit();
        sessao.close();
        
        DefaultTableModel tableModel = new DefaultTableModel();
        
        tableModel.addColumn("Id");
        tableModel.addColumn("CPF");
        tableModel.addColumn("Nome");
        tableModel.addColumn("E-mail");
        tableModel.addColumn("Telefone");
        tableModel.addColumn("Celular");
        
        for(viewmodel.viewGerProfessor viewProf : registrosTelaPrincipal){
            Object[] row = {
                viewProf.getId(),
                viewProf.getCPF(),
                viewProf.getNome(),
                viewProf.getEmail(),
                viewProf.getTelefone(),
                viewProf.getCelular()
            };
            tableModel.addRow(row);
        }
        
        return tableModel;
    }

	
    public Professor(int idProfessor, Pessoa pessoa) {
        this.idProfessor = idProfessor;
        this.pessoa = pessoa;
    }
    public Professor(int idProfessor, Pessoa pessoa, Set professorHasCursos) {
       this.idProfessor = idProfessor;
       this.pessoa = pessoa;
       this.professorHasCursos = professorHasCursos;
    }
   
    public int getIdProfessor() {
        return this.idProfessor;
    }
    
    public void setIdProfessor(int idProfessor) {
        this.idProfessor = idProfessor;
    }
    public Pessoa getPessoa() {
        return this.pessoa;
    }
    
    public void setPessoa(Pessoa pessoa) {
        this.pessoa = pessoa;
    }
    public Set getProfessorHasCursos() {
        return this.professorHasCursos;
    }
    
    public void setProfessorHasCursos(Set professorHasCursos) {
        this.professorHasCursos = professorHasCursos;
    }




}


